{"ast":null,"code":"import axios from'axios';import React,{useState}from'react';import{Link,Navigate}from'react-router-dom';import HeaderSection from'../../components/header';import\"./style/admin_login.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AdminLogin(){const[inputs,setInputs]=useState({showPassword:false});let[logMessage,setLogMessage]=useState(\"\");let[isLoggedIn,setIsLoggedIn]=useState(localStorage.getItem(\"adminstratorIsLoggedIn\"));const logHandleChange=event=>{const name=event.target.name;const value=event.target.value;setInputs(values=>({...values,[name]:value}));};const handleClickShowPassword=()=>{setInputs({...inputs,showPassword:!inputs.showPassword});};const handleSubmit=event=>{event.preventDefault();let{username,password}=inputs;console.log(inputs);axios.post('/admin_login',{admin_id:username,password}).then(res=>res.data).then(data=>{console.log(data);localStorage.setItem(\"access_token\",data.access_token);setLogMessage(data.message);// localStorage.setItem(\"studentIsLoggedIn\", \"true\");\n// setIsLoggedIn(localStorage.getItem(\"studentIsLoggedIn\"));\nlocalStorage.setItem(\"adminstratorIsLoggedIn\",\"true\");setIsLoggedIn(localStorage.getItem(\"adminstratorIsLoggedIn\"));}).catch(error=>{if(error.response.status===401){setLogMessage(error.response.data.message);}else if(error.response.status===400){setLogMessage(error.response.data.message);}else{setLogMessage(\"Internal Server Error!\");}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"Student-login-section\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(HeaderSection,{})}),/*#__PURE__*/_jsxs(\"div\",{className:\"Admin-login-container\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Exam Controller Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",value:inputs.username||\"\",onChange:logHandleChange,autoComplete:\"off\",placeholder:\"Username\",required:true,pattern:\"[a-z A-Z 0-9]+\"}),/*#__PURE__*/_jsx(\"input\",{type:inputs.showPassword?\"text\":\"password\",name:\"password\",value:inputs.password||\"\",onChange:logHandleChange,autoComplete:\"off\",required:true,placeholder:\"Password\"}),/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',display:'flex',alignItems:'center'},children:/*#__PURE__*/_jsxs(\"span\",{className:\"toggle\",children:[\" \",/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onClick:handleClickShowPassword}),\" Show Password\"]})}),/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:logMessage}),/*#__PURE__*/_jsx(\"button\",{children:\"Log In\"}),/*#__PURE__*/_jsx(Link,{to:\"/recover\",children:\"Forgot your password?\"}),isLoggedIn?/*#__PURE__*/_jsx(Navigate,{to:\"/admin_workspace\",replace:true}):/*#__PURE__*/_jsx(\"h3\",{children:\" \"})]})]})]});}","map":{"version":3,"names":["axios","React","useState","Link","Navigate","HeaderSection","jsx","_jsx","jsxs","_jsxs","AdminLogin","inputs","setInputs","showPassword","logMessage","setLogMessage","isLoggedIn","setIsLoggedIn","localStorage","getItem","logHandleChange","event","name","target","value","values","handleClickShowPassword","handleSubmit","preventDefault","username","password","console","log","post","admin_id","then","res","data","setItem","access_token","message","catch","error","response","status","className","children","onSubmit","type","onChange","autoComplete","placeholder","required","pattern","style","width","display","alignItems","onClick","color","to","replace"],"sources":["/home/enam/Desktop/result/frontend/src/pages/admin/admin_login.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useState } from 'react'\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport HeaderSection from '../../components/header'\r\nimport \"./style/admin_login.css\"\r\n\r\nexport default function AdminLogin() {\r\n\r\n  const [inputs, setInputs] = useState({\r\n    showPassword: false\r\n  });\r\n  let [logMessage, setLogMessage] = useState(\"\");\r\n  let [isLoggedIn, setIsLoggedIn] = useState(localStorage.getItem(\"adminstratorIsLoggedIn\"));\r\n\r\n  const logHandleChange = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setInputs(values => ({ ...values, [name]: value }))\r\n  }\r\n\r\n  const handleClickShowPassword = () => {\r\n    setInputs({ ...inputs, showPassword: !inputs.showPassword });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    let { username, password } = inputs;\r\n\r\n    console.log(inputs);\r\n    axios.post('/admin_login', {\r\n      admin_id: username,\r\n      password\r\n    })\r\n      .then(res => res.data)\r\n      .then(data => {\r\n        console.log(data);\r\n        localStorage.setItem(\"access_token\", data.access_token);\r\n        setLogMessage(data.message);\r\n        // localStorage.setItem(\"studentIsLoggedIn\", \"true\");\r\n        // setIsLoggedIn(localStorage.getItem(\"studentIsLoggedIn\"));\r\n\r\n        localStorage.setItem(\"adminstratorIsLoggedIn\", \"true\");\r\n        setIsLoggedIn(localStorage.getItem(\"adminstratorIsLoggedIn\"));\r\n      })\r\n      .catch(error => {\r\n        if (error.response.status === 401) {\r\n          setLogMessage(error.response.data.message);\r\n        }\r\n        else if (error.response.status === 400) {\r\n          setLogMessage(error.response.data.message);\r\n        }\r\n        else {\r\n          setLogMessage(\"Internal Server Error!\");\r\n        }\r\n\r\n      })\r\n  }\r\n  return (\r\n    <div className='Student-login-section'>\r\n      <div>\r\n        <HeaderSection />\r\n      </div>\r\n\r\n      <div className='Admin-login-container'>\r\n        <p>Exam Controller Login</p>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name='username'\r\n            value={inputs.username || \"\"}\r\n            onChange={logHandleChange}\r\n            autoComplete=\"off\"\r\n            placeholder=\"Username\"\r\n            required pattern=\"[a-z A-Z 0-9]+\" />\r\n          <input\r\n            type={inputs.showPassword ? \"text\" : \"password\"}\r\n            name='password'\r\n            value={inputs.password || \"\"}\r\n            onChange={logHandleChange}\r\n            autoComplete=\"off\"\r\n            required placeholder=\"Password\" />\r\n\r\n          <div style={{ width: '100%', display: 'flex', alignItems: 'center' }}>\r\n            <span className='toggle'> <input\r\n              type=\"checkbox\"\r\n              onClick={handleClickShowPassword}\r\n            /> Show Password</span>\r\n          </div>\r\n          <span style={{ color: 'red' }}>{logMessage}</span>\r\n          <button>Log In</button>\r\n          <Link to='/recover'>Forgot your password?</Link>\r\n          {isLoggedIn ? <Navigate to='/admin_workspace' replace /> : <h3> </h3>}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}